{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API ma-governance",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get the specific user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID User.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to add a user.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get the specific user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID User."
          },
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to updated user.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Changing User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User changed successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "User successfully deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID User."
          }
        ],
        "responses": {}
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "Endpoint to get the specific address.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID Address.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "description": "Endpoint to add a address.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Address information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "Endpoint to get the specific address.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Address."
          },
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "description": "Endpoint to updated address.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Changing Address information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Address changed successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "description": "Address successfully deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Address."
          }
        ],
        "responses": {}
      }
    },
    "/people": {
      "get": {
        "tags": [
          "Person"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "description": "Endpoint to add a person.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Person information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPerson"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Person registered successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "description": "Endpoint to get the specific person.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Person."
          }
        ],
        "responses": {
          "200": {
            "description": "Person registered successfully.",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Person"
        ],
        "description": "Endpoint to updated person.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Changing Person information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatedPerson"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Person registered successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Person"
        ],
        "description": "Person successfully deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Person."
          }
        ],
        "responses": {}
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "Endpoint to get the specific company.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "ID Person.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Company registered successfully.",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Company"
        ],
        "description": "Endpoint to add a company.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Company registered successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "Endpoint to get the specific company.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Person."
          }
        ],
        "responses": {
          "200": {
            "description": "Company registered successfully.",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Company"
        ],
        "description": "Endpoint to updated company.",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Company registered successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Company"
        ],
        "description": "Company successfully deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Company."
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "Person": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jonas alves"
        },
        "birth_date": {
          "type": "string",
          "example": "1990-11-05"
        },
        "address": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "name",
        "birth_date",
        "address"
      ],
      "xml": {
        "name": "Person"
      }
    },
    "AddPerson": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jonas alves"
        },
        "birth_date": {
          "type": "string",
          "example": "1990-11-05"
        },
        "address": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "name",
        "birth_date",
        "address"
      ],
      "xml": {
        "name": "AddPerson"
      }
    },
    "UpdatedPerson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Jonas alves"
        },
        "birth_date": {
          "type": "string",
          "example": "11/05/90"
        },
        "address": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "id",
        "name",
        "birth_date",
        "address"
      ],
      "xml": {
        "name": "UpdatedPerson"
      }
    },
    "PhysicalPerson": {
      "type": "object",
      "properties": {
        "cpf": {
          "type": "string",
          "example": "000.000.000.00"
        },
        "rg": {
          "type": "string",
          "example": "0000.200"
        },
        "person": {
          "type": "number",
          "example": 1
        },
        "company": {
          "type": "number",
          "example": 2
        }
      },
      "required": [
        "cpf",
        "rg",
        "person"
      ],
      "xml": {
        "name": "PhysicalPerson"
      }
    },
    "UpdatedPhysicalPerson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "cpf": {
          "type": "string",
          "example": "000.000.000.00"
        },
        "rg": {
          "type": "string",
          "example": "0000.200"
        },
        "person": {
          "type": "number",
          "example": 1
        },
        "company": {
          "type": "number",
          "example": 2
        }
      },
      "required": [
        "id",
        "cpf",
        "rg",
        "person"
      ],
      "xml": {
        "name": "UpdatedPhysicalPerson"
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "person": {
          "type": "number",
          "example": 2
        },
        "cpnj": {
          "type": "string",
          "example": "000.000.000.00"
        }
      },
      "required": [
        "cpnj"
      ],
      "xml": {
        "name": "Company"
      }
    },
    "UpdatedCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 2
        },
        "person": {
          "type": "number",
          "example": 2
        },
        "cpnj": {
          "type": "string",
          "example": "000.000.000.00"
        }
      },
      "required": [
        "id",
        "person",
        "cpnj"
      ],
      "xml": {
        "name": "UpdatedCompany"
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Rua 04"
        },
        "number": {
          "type": "number",
          "example": 4
        },
        "district": {
          "type": "string",
          "example": "Cond. privê"
        },
        "complement": {
          "type": "string",
          "example": "Casa 01 c"
        },
        "cep": {
          "type": "number",
          "example": 72280.266
        },
        "uf": {
          "type": "string",
          "example": "df"
        },
        "city": {
          "type": "string",
          "example": "Ceilândia"
        }
      },
      "required": [
        "number",
        "district",
        "complement",
        "cep",
        "uf",
        "city"
      ],
      "xml": {
        "name": "Address"
      }
    },
    "AddAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Rua 04"
        },
        "number": {
          "type": "number",
          "example": 4
        },
        "district": {
          "type": "string",
          "example": "Cond. privê"
        },
        "complement": {
          "type": "string",
          "example": "Casa 01 c"
        },
        "cep": {
          "type": "number",
          "example": 72280.266
        },
        "uf": {
          "type": "string",
          "example": "df"
        },
        "city": {
          "type": "string",
          "example": "Ceilândia"
        }
      },
      "required": [
        "number",
        "district",
        "complement",
        "cep",
        "uf",
        "city"
      ],
      "xml": {
        "name": "AddAddress"
      }
    },
    "UpdatedAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "number": {
          "type": "number",
          "example": 4
        },
        "district": {
          "type": "string",
          "example": "Cond. privê"
        },
        "complement": {
          "type": "string",
          "example": "Casa 01 c"
        },
        "cep": {
          "type": "number",
          "example": 72280.266
        },
        "uf": {
          "type": "string",
          "example": "df"
        },
        "city": {
          "type": "string",
          "example": "Ceilândia"
        }
      },
      "required": [
        "number",
        "district",
        "complement",
        "cep",
        "uf",
        "city"
      ],
      "xml": {
        "name": "UpdatedAddress"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "user"
        },
        "email": {
          "type": "string",
          "example": "user@gmail.com"
        },
        "physical_person": {
          "type": "number",
          "example": 2
        },
        "password_hash": {
          "type": "string",
          "example": "0000"
        },
        "company": {
          "type": "number",
          "example": 2
        },
        "active": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "email",
        "physical_person",
        "password_hash"
      ],
      "xml": {
        "name": "User"
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "adduser"
        },
        "email": {
          "type": "string",
          "example": "adduser@gmail.com"
        },
        "physical_person": {
          "type": "number",
          "example": 1
        },
        "password_hash": {
          "type": "string",
          "example": "78945"
        },
        "company": {
          "type": "number",
          "example": 2
        },
        "active": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "email",
        "physical_person",
        "password_hash",
        "company"
      ],
      "xml": {
        "name": "AddUser"
      }
    },
    "UpdatedUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "adduser"
        },
        "email": {
          "type": "string",
          "example": "adduser@gmail.com"
        },
        "physical_person": {
          "type": "number",
          "example": 1
        },
        "password_hash": {
          "type": "string",
          "example": "78945"
        },
        "company": {
          "type": "number",
          "example": 2
        },
        "active": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "id",
        "email",
        "physical_person",
        "password_hash",
        "company"
      ],
      "xml": {
        "name": "UpdatedUser"
      }
    }
  }
}